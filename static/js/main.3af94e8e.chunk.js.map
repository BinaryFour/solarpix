{"version":3,"sources":["components/pages/PageCreateJob.js","components/pages/PageCategoryList.js","components/App.js","reducers/index.js","index.js"],"names":["PageCreateJob","renderInput","_ref","label","input","meta","className","concat","error","touched","react_default","a","createElement","Object","assign","autoComplete","_this","renderError","onClick","formValues","props","history","push","_ref2","Field","name","component","this","handleSubmit","React","Component","reduxForm","form","validate","errors","userName","projectName","PageCategoryList","App","style","marginTop","HashRouter","basename","process","Route","path","exact","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"iOAiBMA,6MAgBJC,YAAc,SAAAC,GAA0B,IAAxBC,EAAwBD,EAAxBC,MAAOC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,KACtBC,EAAS,SAAAC,OAAYF,EAAKG,OAASH,EAAKI,QAAU,QAAU,IAClE,OACEC,EAAAC,EAAAC,cAAA,OAAKN,UAAWA,GACdI,EAAAC,EAAAC,cAAA,aAAQT,GACRO,EAAAC,EAAAC,cAAA,QAAAC,OAAAC,OAAA,GAAWV,EAAX,CAAkBW,aAAa,SAC9BC,EAAKC,YAAYZ,OAKxBa,QAAU,SAACC,GACTH,EAAKI,MAAMC,QAAQC,KAAK,mGAxBK,IAAjBd,EAAiBe,EAAjBf,MACZ,GAD6Be,EAAVd,SACJD,EACb,OACEE,EAAAC,EAAAC,cAAA,OAAKN,UAAU,oBACbI,EAAAC,EAAAC,cAAA,OAAKN,UAAU,UAAUE,qCAyB/B,OACEE,EAAAC,EAAAC,cAAA,QAAMN,UAAU,iBACdI,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,KAAK,WAAWtB,MAAM,YAAYuB,UAAWC,KAAK1B,cACzDS,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOC,KAAK,cAActB,MAAM,eAAeuB,UAAWC,KAAK1B,cAC/DS,EAAAC,EAAAC,cAAA,UAAQN,UAAU,oBAAoBY,QAASS,KAAKP,MAAMQ,aAAaD,KAAKT,UAA5E,kBAtCoBW,IAAMC,WAkEnBC,cAAU,CACvBC,KAAM,gBACNC,SAjBe,SAACd,GAChB,IAAMe,EAAS,GASf,OAPKf,EAAWgB,WACdD,EAAOC,SAAW,8BAEfhB,EAAWiB,cACdF,EAAOE,YAAc,iCAGhBF,IAKMH,CAGZ/B,GC1EYqC,mLAPX,OACE3B,EAAAC,EAAAC,cAAA,sCAJyBiB,IAAMC,WCkBtBQ,EAdH,WAEV,OACE5B,EAAAC,EAAAC,cAAA,OAAKN,UAAU,eAAeiC,MAAO,CAAEC,UAAW,SAChD9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAYC,SAAUC,aACpBjC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACpB,UAAW1B,IACjCU,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOC,KAAK,mBAAmBC,OAAK,EAACpB,UAAWW,iBCV3CU,cAAgB,CAC7Bf,KAAMgB,MCMFC,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YACZC,EACAN,EAAiBO,gBAGnBC,IAASC,OACPhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAUN,MAASA,GACjB3C,EAAAC,EAAAC,cAACgD,EAAD,OAEFC,SAASC,cAAc","file":"static/js/main.3af94e8e.chunk.js","sourcesContent":["/*\r\nPageNewJob - First menu that shows to user.\r\n\r\nPurpose:\r\nUser inputs User Name, Project Name, and Profile.\r\nWhen user clicks 'submit', all three variables are saved onto the store.  User is presented with PagePhotoList\r\n\r\n*/\r\n\r\n//import necessary packages\r\nimport React from 'react';\r\nimport {Field, reduxForm } from 'redux-form';\r\n\r\n\r\n\r\n//Import local components\r\n\r\nclass PageCreateJob extends React.Component{\r\n\r\n  //Helper method: renderError\r\n  //Handles when to display an error message\r\n  renderError({ error, touched }){\r\n    if (touched && error){\r\n      return(\r\n        <div className=\"ui error message\">\r\n          <div className=\"header\">{error}</div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  //Helper method: renderInput\r\n  //renders an input InputBar.  Depending on error message criteria, show error style\r\n  renderInput = ({label, input, meta}) => {\r\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n    return (\r\n      <div className={className}>\r\n        <label>{label}</label>\r\n        <input {...input} autoComplete=\"off\"/>\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onClick = (formValues) => {\r\n    this.props.history.push('/categories/list');\r\n  }\r\n\r\n  //Render page layout\r\n  render(){\r\n    return(\r\n      <form className=\"ui form error\" >\r\n        <h1>SolarPix v2.0</h1>\r\n        <Field name=\"userName\" label=\"User Name\" component={this.renderInput}/>\r\n        <Field name=\"projectName\" label=\"Project Name\" component={this.renderInput}/>\r\n        <button className=\"ui button primary\" onClick={this.props.handleSubmit(this.onClick)}>Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n//Helper method: validate\r\n//Used for validation\r\n/*\r\nUser Name or Project Name cannot be blank\r\n\r\n*/\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  if (!formValues.userName){\r\n    errors.userName = 'You must enter a User Name';\r\n  }\r\n  if (!formValues.projectName){\r\n    errors.projectName = 'You must enter a Project Name';\r\n  }\r\n\r\n  return errors;\r\n\r\n}\r\n\r\n\r\nexport default reduxForm({\r\n  form: 'pageCreateJob',\r\n  validate\r\n})(PageCreateJob);\r\n","import React from 'react';\r\n\r\nclass PageCategoryList extends React.Component{\r\n\r\n  render(){\r\n    return(\r\n      <div>PageCategoryList</div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default PageCategoryList;\r\n","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\n//Import local components\r\nimport PageCreateJob from './pages/PageCreateJob';\r\nimport PageCategoryList from './pages/PageCategoryList';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className=\"ui container\" style={{ marginTop: '10px'}}>\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <div>\r\n          <Route path=\"/\" exact component={PageCreateJob}/>\r\n          <Route path=\"/categories/list\" exact component={PageCategoryList}/>\r\n        </div>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport default combineReducers({\r\n  form: formReducer\r\n})\r\n","//Import boilerplate (third party)\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\n//import thunk from 'redux-thunk';\r\n//Import local files (main components)\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware())\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}